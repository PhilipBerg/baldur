% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_posterior.R
\name{infer_data_and_descision_model}
\alias{infer_data_and_descision_model}
\title{Sample the Posterior of the data and decision model}
\usage{
infer_data_and_descision_model(
  data,
  id_col_name,
  design_matrix,
  contrast_matrix,
  uncertainty_matrix,
  stan_model = empirical_bayes,
  clusters = 1,
  h_not = 0,
  ...
)
}
\arguments{
\item{data}{A \code{tibble} or \code{data.frame} with alpha,beta priors annotated}

\item{id_col_name}{A character of the id column}

\item{design_matrix}{A design matrix for the data (see example)}

\item{contrast_matrix}{A contrast matrix of the decisions to test. Rows
should sum to \code{0} and only mean comparisons are allowed. That is, the
positive and negative values in each row has to sum to \code{abs(1)}. E.g., a
row can be \code{[}0.5, 0.5, -1\verb{]} but not \code{[}1, 1, -1\verb{]} or \code{[}0.5, 0.5, -2\verb{]}.
That is, \code{sum(sign(x)*x)=2} where \code{x} is a row in the contrast matrix.}

\item{uncertainty_matrix}{A matrix of observation specific uncertainties}

\item{stan_model}{Which Bayesian model to use. Defaults to \link{empirical_bayes}
but also allows \link{weakly_informative}, or an user supplied function see [].}

\item{clusters}{The number of parallel threads/workers to run on.}

\item{h_not}{The value of the null hypothesis for the difference in means}

\item{...}{Additional arguments passed to
\code{\link[rstan:sampling]{rstan::sampling}}. Note that verbose will
always be forced to \code{FALSE} to avoid console flooding.}
}
\value{
A \code{\link[=tibble]{tibble()}} or \code{\link[=data.frame]{data.frame()}} annotated  with statistics of the
posterior and p(error). \code{err} is the probability of error, i.e., the two
tail-density supporting the null-hypothesis, \code{lfc} is the estimated
\eqn{\log_2}-fold change, \code{sigma} is the common #' variance, and \code{lp} is the
log-posterior. Columns without suffix shows the mean estimate from the
posterior, while the suffixes \verb{_025}, \verb{_50}, and \verb{_975}, are the 2.5, 50.0,
and 97.5, percentiles, respectively. The suffixes \verb{_eff} and \verb{_rhat} are
the diagnostic variables returned by \code{rstan} (please see the Stan manual
for more details). In general, a larger \verb{_eff} indicates a better sampling
efficiency, and \verb{_rhat} compares the mixing within chains against between
the chains and should be smaller than 1.05.
}
\description{
Function to sample the posterior of the Bayesian data and
decision model. It first produces the needed inputs for Stan's \code{\link[=sampling]{sampling()}}
for each peptide (or protein, PTM, etc.). It then runs the sampling for the
data and decision model. From the posterior, it then collects estimates and
sampling statistics from the posterior of data model and integrates the
decision distribution D. It then returns a \code{\link[=tibble]{tibble()}} with all the
information for each peptide's posterior (see \strong{Value} below). There are major time gains to
be made by running this procedure in parallel. \code{infer_data_and_descision_model} has an
efficient wrapper around \code{multipldyr}. This will let you to evenly
distribute all peptides evenly to each worker. E.g., two workers will each
run half of the peptides in parallel.
}
\details{
Model description here
}
\examples{
# (Please see the vignette for a tutorial)
# Setup model matrix
design <- model.matrix(~ 0 + factor(rep(1:2, each = 3)))
colnames(design) <- paste0("ng", c(50, 100))

yeast_norm <- yeast \%>\%
# Remove missing data
  tidyr::drop_na() \%>\%
  # Normalize data
  psrn('identifier') \%>\%
  # Add mean-variance trends
  calculate_mean_sd_trends(design)
# Fit the gamma regression
gam <- fit_gamma_regression(yeast_norm, sd ~ mean)
# Estimate each data point's uncertainty
unc <- estimate_uncertainty(gam, yeast_norm, 'identifier', design)
yeast_norm <- gam \%>\%
   # Add hyper-priors for sigma
   estimate_gamma_hyperparameters(yeast_norm)
# Setup contrast matrix
contrast <- matrix(c(-1, 1), ncol = 2)
\donttest{
yeast_norm \%>\%
  head() \%>\% # Just running a few for the example
  infer_data_and_descision_model(
    'identifier',
    design,
    contrast,
    unc,
    clusters = 1 # I highly recommend increasing the number of parallel workers/clusters
                 # this will greatly reduce the speed of running baldur
  )
}
}
